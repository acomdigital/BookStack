# Build js and css
FROM node:lts-alpine as node_build
WORKDIR /www
COPY package.json ./
RUN npm install
COPY resources/ ./resources/
COPY public/ ./public/
COPY dev/build/ ./dev/build/
RUN npm run production

FROM php:8.1-fpm-buster as final
RUN set -x; \
    apt-get update \
    && apt-get install -y --no-install-recommends \
        git \
        zlib1g-dev \
        libfreetype6-dev \
        libjpeg62-turbo-dev \
        libmcrypt-dev \
        libpng-dev  \
        libldap2-dev  \
        libtidy-dev  \
        libxml2-dev  \
        fontconfig  \
        fonts-freefont-ttf   \
        wget \
        tar \
        curl \
        libzip-dev \
        unzip \
	&& wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.buster_amd64.deb \
	&& chmod a+x ./wkhtmltox_0.12.6-1.buster_amd64.deb \
    && apt-get install -y ./wkhtmltox_0.12.6-1.buster_amd64.deb \
    && rm ./wkhtmltox_0.12.6-1.buster_amd64.deb \
    && docker-php-ext-install -j$(nproc) dom pdo pdo_mysql zip tidy  \
    && docker-php-ext-configure ldap \
    && docker-php-ext-install -j$(nproc) ldap \
    && docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ \
    && docker-php-ext-install -j$(nproc) gd
RUN apt-get remove -y git && apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

ARG APP_WORKDIR=/var/www/fpm/bookstack
ARG APP_USER=www-data
ARG APP_GROUP=www-data

COPY dev/ee/fpm/www.conf /usr/local/etc/php-fpm.d/www.conf
COPY --chmod=775 dev/ee/fpm/docker-entrypoint.sh /bin/docker-entrypoint.sh
COPY . $APP_WORKDIR
COPY --from=node_build /www/public/dist $APP_WORKDIR/public/dist/

ARG COMPOSER_VERSION=2.1.12
RUN set -x; \
    cd $APP_WORKDIR \
    && curl -sS https://getcomposer.org/installer | php -- --version=$COMPOSER_VERSION \
    && $APP_WORKDIR/composer.phar install -v -d $APP_WORKDIR \
    && rm -rf $APP_WORKDIR/composer.phar /root/.composer

WORKDIR $APP_WORKDIR

RUN usermod -u 1000 $APP_USER
RUN groupmod -g 1000 $APP_GROUP

# Set correct permissions for files
RUN find $APP_WORKDIR -type f -exec chmod 644 {} \;

# Set correct permissions for directories
RUN find $APP_WORKDIR -type d -exec chmod 755 {} \;

# Set webserver group for storage + cache folders
RUN chgrp -R $APP_GROUP $APP_WORKDIR/storage $APP_WORKDIR/bootstrap/cache

# Set correct permissions for storage + cache folders
RUN chmod -R ug+rwx $APP_WORKDIR/storage $APP_WORKDIR/bootstrap/cache

EXPOSE 9000

CMD ["/bin/docker-entrypoint.sh"]